#include <bits/stdc++.h>

using namespace std;

// A function to returns a maximum of two numbers

int max(int X, int Y)

{

if(X>Y)

return X;

else

return Y;

}

// A function to returns the maximum value

// that can be stored in a knapsack of W=10

int knapSack(int W, int wt[], int val[], int n)

{

int i, w;

vector<vector<int>> K(n + 1, vector<int>(W + 1));

// Build table K[][] in bottom up manner

for(i = 0; i <= n; i++)

{

for(w = 0; w <= W; w++)

{

if (i == 0 || w == 0)

K[i][w] = 0;

else if (wt[i - 1] <= w)

K[i][w] = max(val[i - 1] +K[i - 1][w - wt[i - 1]], K[i - 1][w]);

else

K[i][w] = K[i - 1][w];

}

}

return K[n][W];

}

int main()

{

int val[] = { 300, 150, 120, 100, 90, 80 };

int wt[] = { 6, 3, 3, 2, 2, 2 };

int W = 10;

int n = sizeof(val) / sizeof(val[0]);

cout << knapSack(W, wt, val, n);

return 0;

}